#!/bin/bash

# Setup IG Repository for GitHub Pages
# This script creates a separate repository for the FHIR Implementation Guide
# that can be deployed to GitHub Pages

set -e

# Configuration
IG_REPO_NAME="recupero-caba-ig"
IG_REPO_PATH="../$IG_REPO_NAME"
CURRENT_DIR=$(pwd)

echo "🚀 Setting up IG repository for GitHub Pages..."

# Create the IG repository directory
if [ -d "$IG_REPO_PATH" ]; then
    echo "⚠️  IG repository directory already exists at $IG_REPO_PATH"
    echo "   Please remove it manually if you want to recreate it."
    exit 1
fi

echo "📁 Creating IG repository directory..."
mkdir -p "$IG_REPO_PATH"
cd "$IG_REPO_PATH"

# Initialize git repository
echo "🔧 Initializing git repository..."
git init

# Copy the output folder contents
echo "📋 Copying output folder contents..."
cp -r "$CURRENT_DIR/output/"* .

# Create a .gitignore file for the IG repo
echo "📝 Creating .gitignore..."
cat > .gitignore << 'EOF'
# Ignore everything except the IG output
# This ensures only the generated IG files are tracked

# OS files
.DS_Store
Thumbs.db

# Editor files
.vscode/
.idea/
*.swp
*.swo

# Temporary files
*.tmp
*.temp

# Log files
*.log

# Node modules (if any build tools are added later)
node_modules/

# Build artifacts (if any build process is added)
dist/
build/
EOF

# Create README for the IG repository
echo "📖 Creating README..."
cat > README.md << 'EOF'
# Recupero CABA Implementation Guide

This repository contains the generated FHIR Implementation Guide for Recupero CABA.

## About

This is the published version of the Recupero CABA Implementation Guide, generated from the main development repository.

## Access

- **GitHub Pages**: https://[your-username].github.io/recupero-caba-ig/
- **Source Repository**: [Link to main development repository]

## Structure

This repository contains only the generated output files from the FHIR IG Publisher. The source files are maintained in the main development repository.

## Updates

This repository is automatically updated when changes are made to the main development repository and the IG is regenerated.

## Local Development

To view the IG locally:

1. Clone this repository
2. Open `index.html` in your web browser
3. Or serve with a local web server: `python3 -m http.server 8000`

## License

[Add your license information here]
EOF

# Create GitHub Pages configuration
echo "⚙️  Creating GitHub Pages configuration..."
mkdir -p .github/workflows

# Create GitHub Actions workflow for automatic deployment
cat > .github/workflows/deploy.yml << 'EOF'
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
EOF

# Create a sync script for updating the IG
echo "🔄 Creating sync script..."
cat > sync_ig.sh << 'EOF'
#!/bin/bash

# Sync IG Repository with Output
# This script syncs the IG repository with the latest output from the main repository

set -e

# Configuration
MAIN_REPO_PATH="../cursoprofiling"
IG_REPO_PATH="."

echo "🔄 Syncing IG repository with latest output..."

# Check if we're in the IG repository
if [ ! -f "README.md" ] || [ ! -f ".gitignore" ]; then
    echo "❌ Error: This script must be run from the IG repository directory"
    exit 1
fi

# Check if main repository exists
if [ ! -d "$MAIN_REPO_PATH" ]; then
    echo "❌ Error: Main repository not found at $MAIN_REPO_PATH"
    echo "   Please ensure the main repository is in the correct location"
    exit 1
fi

# Copy latest output
echo "📋 Copying latest output from main repository..."
rm -rf *
cp -r "$MAIN_REPO_PATH/output/"* .

# Add all changes
echo "📝 Adding changes to git..."
git add -A

# Check if there are changes to commit
if git diff --staged --quiet; then
    echo "✅ No changes to commit"
else
    # Commit changes
    echo "💾 Committing changes..."
    git commit -m "Update IG with latest output from main repository
    
    - Auto-generated by sync script
    - Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
    
    echo "📤 Pushing to remote repository..."
    git push origin main
    
    echo "✅ IG repository updated successfully!"
fi
EOF

# Make the sync script executable
chmod +x sync_ig.sh

# Create initial commit
echo "💾 Creating initial commit..."
git add -A
git commit -m "Initial commit: FHIR Implementation Guide for Recupero CABA

- Generated from main development repository
- Ready for GitHub Pages deployment
- Auto-generated structure"

echo "✅ IG repository setup complete!"
echo ""
echo "📋 Next steps:"
echo "1. Create a new repository on GitHub named '$IG_REPO_NAME'"
echo "2. Add the remote origin:"
echo "   cd $IG_REPO_PATH"
echo "   git remote add origin https://github.com/[your-username]/$IG_REPO_NAME.git"
echo "3. Push to GitHub:"
echo "   git push -u origin main"
echo "4. Enable GitHub Pages in the repository settings"
echo "5. The IG will be available at: https://[your-username].github.io/$IG_REPO_NAME/"
echo ""
echo "🔄 To update the IG later, run:"
echo "   cd $IG_REPO_PATH"
echo "   ./sync_ig.sh"
echo ""
echo "📁 IG repository location: $IG_REPO_PATH" 